{"ast":null,"code":"var _jsxFileName = \"/home/shogil/Projects/templeappfrontend/pages/poojas.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport dataFetch from \"../utils/dataFetch\";\n\nconst Poojas = ({}) => {\n  const {\n    0: isLoaded,\n    1: setLoaded\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState(false);\n  const {\n    0: isQueried,\n    1: setQueried\n  } = useState(false);\n  const query = `{\n    listPoojas\n      {\n        id\n        name\n        price\n      }\n    }`;\n\n  const getPoojas = async () => await dataFetch({\n    query\n  });\n\n  useEffect(() => {\n    if (!isQueried) {\n      getPoojas().then(response => {\n        setQueried(true);\n\n        if (!Object.prototype.hasOwnProperty.call(response, 'errors')) {\n          setData(response.data.listPoojas);\n          setLoaded(true);\n        }\n      });\n    }\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Poojas\"), isLoaded ? data.map(i => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, i.name), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Rs. \", i.price))) : null);\n};\n\nexport default Poojas;","map":{"version":3,"sources":["/home/shogil/Projects/templeappfrontend/pages/poojas.js"],"names":["React","useState","useEffect","dataFetch","Poojas","isLoaded","setLoaded","data","setData","isQueried","setQueried","query","getPoojas","then","response","Object","prototype","hasOwnProperty","call","listPoojas","map","i","name","price"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC,EAAD,KAAS;AAEpB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACM,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA0BT,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMU,KAAK,GAAI;;;;;;;MAAf;;AASA,QAAMC,SAAS,GAAG,YAAY,MAAMT,SAAS,CAAC;AAAEQ,IAAAA;AAAF,GAAD,CAA7C;;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACO,SAAJ,EACA;AACIG,MAAAA,SAAS,GAAGC,IAAZ,CAAiBC,QAAQ,IAAI;AACzBJ,QAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,YAAI,CAACK,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,QAArC,EAA+C,QAA/C,CAAL,EAA+D;AAC3DN,UAAAA,OAAO,CAACM,QAAQ,CAACP,IAAT,CAAcY,UAAf,CAAP;AACAb,UAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,OAND;AAOH;AACJ,GAXQ,CAAT;AAaA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQD,QAAQ,GACJE,IAAI,CAACa,GAAL,CAASC,CAAC,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,CAAC,CAACC,IADJ,CADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAUD,CAAC,CAACE,KAAZ,CAHJ,CADJ,CADI,GAOA,IAVhB,CADJ;AAgBH,CA/CD;;AAiDA,eAAenB,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport dataFetch from \"../utils/dataFetch\";\n\nconst Poojas = ({ }) => {\n\n    const [isLoaded, setLoaded] = useState(false);\n    const [data, setData] = useState(false);\n    const [isQueried, setQueried] = useState(false);\n\n    const query = `{\n    listPoojas\n      {\n        id\n        name\n        price\n      }\n    }`;\n\n    const getPoojas = async () => await dataFetch({ query });\n\n\n    useEffect(() => {\n        if(!isQueried)\n        {\n            getPoojas().then(response => {\n                setQueried(true);\n                if (!Object.prototype.hasOwnProperty.call(response, 'errors')) {\n                    setData(response.data.listPoojas)\n                    setLoaded(true);\n                }\n            })\n        }\n    });\n\n    return (\n        <div>\n            <h1>Poojas</h1>\n            {\n                isLoaded ?\n                    data.map(i =>\n                        <div>\n                            <h3\n                            >{i.name}</h3>\n                            <div>Rs. {i.price}</div>\n                        </div>\n                    ) : null\n            }\n        </div>\n    )\n\n};\n\nexport default Poojas;"]},"metadata":{},"sourceType":"module"}