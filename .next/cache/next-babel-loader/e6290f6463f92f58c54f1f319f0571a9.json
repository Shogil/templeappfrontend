{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from 'isomorphic-fetch';\nvar API_URL = 'http://127.0.0.1:8000/';\nexport default (function (_ref) {\n  var query = _ref.query,\n      variables = _ref.variables;\n  var body = {\n    query: query,\n    variables: variables\n  };\n  var apiConfig = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json' // Authorization: token ? `JWT ${token}` : null,\n\n    },\n    body: _JSON$stringify(body)\n  };\n  return fetch(API_URL, apiConfig).then(function (response) {\n    var contentType = response.headers.get('content-type');\n\n    if (response.ok) {\n      if (contentType && contentType.indexOf('application/json') !== -1) {\n        return response.json().then(function (json) {\n          return json;\n        });\n      }\n\n      if (contentType && contentType.indexOf('text') !== -1) {\n        return response.text().then(function (text) {\n          return text;\n        });\n      }\n\n      return response;\n    }\n\n    console.error(\"Response status \".concat(response.status, \" during dataFetch for url \").concat(response.url, \".\"));\n    throw response;\n  });\n});","map":{"version":3,"sources":["/home/shogil/Projects/templeappfrontend/utils/dataFetch.js"],"names":["fetch","API_URL","query","variables","body","apiConfig","method","headers","then","response","contentType","get","ok","indexOf","json","text","console","error","status","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAGA,IAAMC,OAAO,GAAG,wBAAhB;AAEA,gBAAe,gBAA0B;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACrC,MAAMC,IAAI,GAAG;AACTF,IAAAA,KAAK,EAALA,KADS;AAETC,IAAAA,SAAS,EAATA;AAFS,GAAb;AAKA,MAAME,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX,CAEL;;AAFK,KAFK;AAMdH,IAAAA,IAAI,EAAE,gBAAeA,IAAf;AANQ,GAAlB;AASA,SAAOJ,KAAK,CAACC,OAAD,EAAUI,SAAV,CAAL,CAA0BG,IAA1B,CAA+B,UAASC,QAAT,EAAmB;AACrD,QAAMC,WAAW,GAAGD,QAAQ,CAACF,OAAT,CAAiBI,GAAjB,CAAqB,cAArB,CAApB;;AACA,QAAIF,QAAQ,CAACG,EAAb,EAAiB;AACb,UAAIF,WAAW,IAAIA,WAAW,CAACG,OAAZ,CAAoB,kBAApB,MAA4C,CAAC,CAAhE,EAAmE;AAC/D,eAAOJ,QAAQ,CAACK,IAAT,GAAgBN,IAAhB,CAAqB,UAAAM,IAAI;AAAA,iBAAIA,IAAJ;AAAA,SAAzB,CAAP;AACH;;AACD,UAAIJ,WAAW,IAAIA,WAAW,CAACG,OAAZ,CAAoB,MAApB,MAAgC,CAAC,CAApD,EAAuD;AACnD,eAAOJ,QAAQ,CAACM,IAAT,GAAgBP,IAAhB,CAAqB,UAAAO,IAAI;AAAA,iBAAIA,IAAJ;AAAA,SAAzB,CAAP;AACH;;AACD,aAAON,QAAP;AACH;;AACDO,IAAAA,OAAO,CAACC,KAAR,2BAAiCR,QAAQ,CAACS,MAA1C,uCAA6ET,QAAQ,CAACU,GAAtF;AACA,UAAMV,QAAN;AACH,GAbM,CAAP;AAcH,CA7BD","sourcesContent":["import fetch from 'isomorphic-fetch';\n\n\nconst API_URL = 'http://127.0.0.1:8000/';\n\nexport default ({ query, variables }) => {\n    const body = {\n        query,\n        variables,\n    };\n\n    const apiConfig = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            // Authorization: token ? `JWT ${token}` : null,\n        },\n        body: JSON.stringify(body),\n    };\n\n    return fetch(API_URL, apiConfig).then(function(response) {\n        const contentType = response.headers.get('content-type');\n        if (response.ok) {\n            if (contentType && contentType.indexOf('application/json') !== -1) {\n                return response.json().then(json => json);\n            }\n            if (contentType && contentType.indexOf('text') !== -1) {\n                return response.text().then(text => text);\n            }\n            return response;\n        }\n        console.error(`Response status ${response.status} during dataFetch for url ${response.url}.`);\n        throw response;\n    });\n};"]},"metadata":{},"sourceType":"module"}