{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/shogil/Projects/templeappfrontend/pages/create-order.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport dataFetch from \"../utils/dataFetch\";\nimport Base from \"../components/Base\";\n\nvar Poojas = function Poojas() {\n  var _useState = useState(false),\n      isLoaded = _useState[0],\n      setLoaded = _useState[1];\n\n  var _useState2 = useState(false),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      isQueried = _useState3[0],\n      setQueried = _useState3[1];\n\n  var query = \"{\\n    listPoojas\\n      {\\n        id\\n        name\\n        price\\n      }\\n    }\";\n\n  var getPoojas = function getPoojas() {\n    return _regeneratorRuntime.async(function getPoojas$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(dataFetch({\n              query: query\n            }));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    if (!isQueried) {\n      getPoojas().then(function (response) {\n        setQueried(true);\n\n        if (!Object.prototype.hasOwnProperty.call(response, 'errors')) {\n          setData(response.data.listPoojas);\n          setLoaded(true);\n        }\n      });\n    }\n  });\n\n  var renderPoojaOptions = function renderPoojaOptions() {\n    return __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Select Pooja\"), __jsx(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, data.map(function (i) {\n      return __jsx(\"option\", {\n        value: i.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, i.name);\n    })));\n  };\n\n  return __jsx(Base, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container py-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row m-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Create Order\"), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"input\", {\n    className: \"form-control\",\n    placeholder: \"Enter Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), isLoaded ? renderPoojaOptions() : null))));\n};\n\nexport default Poojas;","map":{"version":3,"sources":["/home/shogil/Projects/templeappfrontend/pages/create-order.js"],"names":["React","useState","useEffect","dataFetch","Base","Poojas","isLoaded","setLoaded","data","setData","isQueried","setQueried","query","getPoojas","then","response","Object","prototype","hasOwnProperty","call","listPoojas","renderPoojaOptions","map","i","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBAEaJ,QAAQ,CAAC,KAAD,CAFrB;AAAA,MAEVK,QAFU;AAAA,MAEAC,SAFA;;AAAA,mBAGON,QAAQ,CAAC,KAAD,CAHf;AAAA,MAGVO,IAHU;AAAA,MAGJC,OAHI;;AAAA,mBAIeR,QAAQ,CAAC,KAAD,CAJvB;AAAA,MAIVS,SAJU;AAAA,MAICC,UAJD;;AAMjB,MAAMC,KAAK,wFAAX;;AASA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAkBV,SAAS,CAAC;AAAES,cAAAA,KAAK,EAALA;AAAF,aAAD,CAA3B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAGAV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAG,CAACQ,SAAJ,EACA;AACIG,MAAAA,SAAS,GAAGC,IAAZ,CAAiB,UAAAC,QAAQ,EAAI;AACzBJ,QAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,YAAI,CAACK,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,QAArC,EAA+C,QAA/C,CAAL,EAA+D;AAC3DN,UAAAA,OAAO,CAACM,QAAQ,CAACP,IAAT,CAAcY,UAAf,CAAP;AACAb,UAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,OAND;AAOH;AACJ,GAXQ,CAAT;;AAaA,MAAMc,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,WACvB;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQb,IAAI,CAACc,GAAL,CAAS,UAAAC,CAAC;AAAA,aACN;AAAQ,QAAA,KAAK,EAAEA,CAAC,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBD,CAAC,CAACE,IAAxB,CADM;AAAA,KAAV,CAFR,CAFJ,CADuB;AAAA,GAA3B;;AAaA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,WAAW,EAAC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,EAMMnB,QAAQ,GAAGe,kBAAkB,EAArB,GAA0B,IANxC,CADJ,CADJ,CADJ,CADJ;AAiBH,CA7DD;;AA+DA,eAAehB,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport dataFetch from \"../utils/dataFetch\";\nimport Base from \"../components/Base\";\n\nconst Poojas = () => {\n\n    const [isLoaded, setLoaded] = useState(false);\n    const [data, setData] = useState(false);\n    const [isQueried, setQueried] = useState(false);\n\n    const query = `{\n    listPoojas\n      {\n        id\n        name\n        price\n      }\n    }`;\n\n    const getPoojas = async () => await dataFetch({ query });\n\n\n    useEffect(() => {\n        if(!isQueried)\n        {\n            getPoojas().then(response => {\n                setQueried(true);\n                if (!Object.prototype.hasOwnProperty.call(response, 'errors')) {\n                    setData(response.data.listPoojas);\n                    setLoaded(true);\n                }\n            })\n        }\n    });\n\n    const renderPoojaOptions = () => (\n        <div className=\"form-group\">\n            <label>Select Pooja</label>\n            <select>\n                {\n                    data.map(i =>\n                        <option value={i.id}>{i.name}</option>\n                    )\n                }\n            </select>\n        </div>\n    )\n\n    return (\n        <Base>\n            <div className=\"container py-4\">\n                <div className=\"row m-0\">\n                    <div className=\"card p-4\">\n                        <h1 className=\"mb-2\">Create Order</h1>\n                        <div className=\"form-group\">\n                            <label>Name</label>\n                            <input className=\"form-control\" placeholder=\"Enter Name\" />\n                        </div>\n                        { isLoaded ? renderPoojaOptions() : null }\n                    </div>\n                </div>\n            </div>\n        </Base>\n    )\n\n};\n\nexport default Poojas;"]},"metadata":{},"sourceType":"module"}