{"ast":null,"code":"var _jsxFileName = \"/home/shogil/Projects/templeappfrontend/pages/poojas.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport dataFetch from \"../utils/dataFetch\";\nimport Base from \"../components/Base\";\n\nconst Poojas = () => {\n  const {\n    0: isLoaded,\n    1: setLoaded\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState(false);\n  const {\n    0: isQueried,\n    1: setQueried\n  } = useState(false);\n  const query = `{\n    listPoojas\n      {\n        id\n        name\n        price\n      }\n    }`;\n\n  const getPoojas = async () => await dataFetch({\n    query\n  });\n\n  useEffect(() => {\n    if (!isQueried) {\n      getPoojas().then(response => {\n        setQueried(true);\n\n        if (!Object.prototype.hasOwnProperty.call(response, 'errors')) {\n          setData(response.data.listPoojas);\n          setLoaded(true);\n        }\n      });\n    }\n  });\n\n  const renderPoojaCard = pooja => __jsx(\"div\", {\n    className: \"card p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, pooja.name), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Rs. \", pooja.price));\n\n  const showLoading = __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Loading\"));\n\n  return __jsx(Base, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Poojas\"), isLoaded ? data.map(i => renderPoojaCard(i)) : showLoading);\n};\n\nexport default Poojas;","map":{"version":3,"sources":["/home/shogil/Projects/templeappfrontend/pages/poojas.js"],"names":["React","useState","useEffect","dataFetch","Base","Poojas","isLoaded","setLoaded","data","setData","isQueried","setQueried","query","getPoojas","then","response","Object","prototype","hasOwnProperty","call","listPoojas","renderPoojaCard","pooja","name","price","showLoading","map","i"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACO,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA0BV,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMW,KAAK,GAAI;;;;;;;MAAf;;AASA,QAAMC,SAAS,GAAG,YAAY,MAAMV,SAAS,CAAC;AAAES,IAAAA;AAAF,GAAD,CAA7C;;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACQ,SAAJ,EACA;AACIG,MAAAA,SAAS,GAAGC,IAAZ,CAAiBC,QAAQ,IAAI;AACzBJ,QAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,YAAI,CAACK,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,QAArC,EAA+C,QAA/C,CAAL,EAA+D;AAC3DN,UAAAA,OAAO,CAACM,QAAQ,CAACP,IAAT,CAAcY,UAAf,CAAP;AACAb,UAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,OAND;AAOH;AACJ,GAXQ,CAAT;;AAaA,QAAMc,eAAe,GAAIC,KAAD,IACpB;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAUD,KAAK,CAACE,KAAhB,CAFJ,CADJ;;AAMA,QAAMC,WAAW,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ;;AAKA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEMnB,QAAQ,GAAGE,IAAI,CAACkB,GAAL,CAASC,CAAC,IAAIN,eAAe,CAACM,CAAD,CAA7B,CAAH,GAAuCF,WAFrD,CADJ;AAOH,CAjDD;;AAmDA,eAAepB,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport dataFetch from \"../utils/dataFetch\";\nimport Base from \"../components/Base\";\n\nconst Poojas = () => {\n\n    const [isLoaded, setLoaded] = useState(false);\n    const [data, setData] = useState(false);\n    const [isQueried, setQueried] = useState(false);\n\n    const query = `{\n    listPoojas\n      {\n        id\n        name\n        price\n      }\n    }`;\n\n    const getPoojas = async () => await dataFetch({ query });\n\n\n    useEffect(() => {\n        if(!isQueried)\n        {\n            getPoojas().then(response => {\n                setQueried(true);\n                if (!Object.prototype.hasOwnProperty.call(response, 'errors')) {\n                    setData(response.data.listPoojas);\n                    setLoaded(true);\n                }\n            })\n        }\n    });\n\n    const renderPoojaCard = (pooja) =>\n        <div className=\"card p-2\">\n            <h3>{pooja.name}</h3>\n            <div>Rs. {pooja.price}</div>\n        </div>;\n\n    const showLoading =\n        <div>\n            <h1>Loading</h1>\n        </div>;\n\n    return (\n        <Base>\n            <h1>Poojas</h1>\n            { isLoaded ? data.map(i => renderPoojaCard(i)) : showLoading }\n        </Base>\n    )\n\n};\n\nexport default Poojas;"]},"metadata":{},"sourceType":"module"}